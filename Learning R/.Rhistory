knit_with_parameters('D:/DAND/Learning R/lesson3/Lesson3_exercise.Rmd')
setwd("D:/DAND/Learning R/lesson3")
getwd()
setwd("D:/DAND/Learning R/lesson4")
library(ggplot2)
pf <- read.csv("pseudo_facebook.tsv",sep = "\t")
library(ggplot2)
pf <- read.csv("pseudo_facebook.tsv",sep = "\t")
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_point()
qplot(x = age, y = friend_count, data = pf)
library(ggplot2)
pf <- read.csv("pseudo_facebook.tsv",sep = "\t")
# 还可以使用以下代码读入数据
# read.delim("pseudo_facebook.tsv")
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_point()
# 等效的qplot语法
# qplot(x = age, y = friend_count, data = pf)
Sys.getlocale()
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_point()
Sys.setlocale(locale = "C")
library(ggplot2)
pf <- read.csv("pseudo_facebook.tsv",sep = "\t")
# 还可以使用以下代码读入数据
# read.delim("pseudo_facebook.tsv")
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_point()
# 等效的qplot语法
# qplot(x = age, y = friend_count, data = pf)
summary(pf$age)
# ggplot 与 qplot之间的主要区别是：
# 1. 我们需要geom指定图表类型
# 2. ggplot需要将xy变量用aes包裹
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_point() +
xlim(13,90)
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_point(alpha = 1/20) +
xlim(13,90)
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_jitter(alpha = 1/20) +
xlim(13,90)
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_point(alpha = 1/20) +
xlim(13,90) +
scale_y_sqrt()
p1 <- ggplot(aes(x = age, y = friend_count), data = pf) +
geom_point(alpha = 1/20) +
xlim(13,90)
p1 + scale_y_sqrt()
p1 <- ggplot(aes(x = age, y = friend_count), data = pf) +
geom_point(alpha = 1/20) +
xlim(13,90)
p1 + scale_y_log10()
p1 <- ggplot(aes(x = age, y = friend_count), data = pf) +
geom_point(alpha = 1/20) +
xlim(13,90)
p1 + scale_y_sqrt()
?coord_trans
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_point(alpha = 1/20) +
xlim(13,90) +
coord_trans(y = "squart")
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_point(alpha = 1/20) +
xlim(13,90) +
coord_trans(y = "sqrt")
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_point(alpha = 1/20,position = position_jitter(height = 0)) +
xlim(13,90) +
coord_trans(y = "sqrt")
ggplot(aes(x = age, y = friendships_initiated), data = pf)
ggplot(aes(x = age, y = friendships_initiated), data = pf) +
geom_point()
ggplot(aes(x = age, y = friendships_initiated), data = pf) +
geom_point(alpha(1/20))
ggplot(aes(x = age, y = friendships_initiated), data = pf) +
geom_point(alpha(alpha = 0.05))
ggplot(aes(x = age, y = friendships_initiated), data = pf) +
geom_point(colours(),alpha(alpha = 0.05))
ggplot(aes(x = age, y = friendships_initiated), data = pf) +
geom_point(colour="#FCCCCC",alpha(alpha = 0.05))
ggplot(aes(x = age, y = friendships_initiated), data = pf) +
geom_point(alpha(colour = NA,alpha = 0.05))
ggplot(aes(x = age, y = friendships_initiated), data = pf) +
geom_point(alpha(colour = "#FCCC00",alpha = 0.05))
ggplot(aes(x = age, y = friendships_initiated), data = pf) +
geom_point(alpha(colour = "#00000",alpha = 0.05))
ggplot(aes(x = age, y = friendships_initiated), data = pf) +
geom_point(alpha(colour = "#000000",alpha = 0.05))
ggplot(aes(x = age, y = friendships_initiated), data = pf) +
geom_point(alpha(colour = "000000",alpha = 0.05))
?geom_point
ggplot(aes(x = age, y = friendships_initiated), data = pf) +
geom_point(colour = "Red",alpha = 0.05)
ggplot(aes(x = age, y = friendships_initiated), data = pf) +
geom_point(color = "Red",alpha = 0.05)
ggplot(aes(x = age, y = friendships_initiated), data = pf) +
geom_point(color = "Red",size = 1.5, alpha = 0.05)
ggplot(aes(x = age, y = friendships_initiated), data = pf) +
geom_point(color = "Red",size = 5, alpha = 0.05)
ggplot(aes(x = age, y = friendships_initiated), data = pf) +
geom_point(color = "Red",size = 1, alpha = 0.05)
ggplot(aes(x = age, y = friendships_initiated), data = pf) +
geom_point(color = "Red", alpha = 0.05, position = position_jitter(height = 0)) +
xlim(13,90) +
coord_trans(y = "sqrt")
ggplot(aes(x = age, y = friendships_initiated), data = pf) +
geom_point(color = "Red", alpha = 1/10, position = position_jitter(height = 0)) +
xlim(13,90) +
coord_trans(y = "sqrt")
install.packages("dplyr")
library(dplyr)
group_by(pf, age)
group_by(pf, age)
age_groups <- group_by(pf, age)
pf.fc_by_age <- summarise(age_groups,
friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n())
head(pf.fc_by_age)
head(age_groups)
head(pf)
library(dplyr)
age_groups <- group_by(pf, age)
pf.fc_by_age <- summarise(age_groups,
friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n())
head(pf.fc_by_age)
?summarise
library(dplyr)
age_groups <- group_by(pf, age)
pf.fc_by_age <- summarise(age_groups,
friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n())
head(pf.fc_by_age)
pf %.%
group_by(age) %.%
summarise(friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n()) %.%
arrange(age)
pf %>%
group_by(age) %>%
summarise(friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n()) %>%
arrange(age)
ggplot(aes(x = age, y = friend_count_mean),data = pf.fc_by_age) +
geom_line()
ggplot(aes(x = age, y = friend_count_mean),data = pf.fc_by_age) +
geom_line(color = "Red")
ggplot(aes(x = age, y = friend_count),data = pf) +
xlim(13,90) +
geom_point(alpha = 0.05,
position = position_jitter(height = 0),
color = "red") +
coord_trans(y = "sqrt") +
geom_line(stat = "summary", fun.y = mean)
ggplot(aes(x = age, y = friend_count),data = pf) +
xlim(13,90) +
geom_point(alpha = 0.05,
position = position_jitter(height = 0),
color = "red") +
coord_trans(y = "sqrt") +
geom_line(stat = "summary", fun.y = mean, color = "pink")
ggplot(aes(x = age, y = friend_count),data = pf) +
xlim(13,90) +
geom_point(alpha = 0.05,
position = position_jitter(height = 0),
color = "red") +
coord_trans(y = "sqrt") +
geom_line(stat = "summary", fun.y = mean, color = "black") +
geom_line(stat = "summary", fun.y = quantile, probs = .1)
ggplot(aes(x = age, y = friend_count),data = pf) +
xlim(13,90) +
geom_point(alpha = 0.05,
position = position_jitter(height = 0),
color = "red") +
coord_trans(y = "sqrt") +
geom_line(stat = "summary", fun.y = mean) +
geom_line(stat = "summary", fun.y = quantile, probs = .1)
ggplot(aes(x = age, y = friend_count),data = pf) +
xlim(13,90) +
geom_point(alpha = 0.05,
position = position_jitter(height = 0),
color = "red") +
coord_trans(y = "sqrt") +
geom_line(stat = "summary", fun.y = mean) +
geom_line(stat = "summary", fun.y = quantile, fun.args = list(probs = .9))
ggplot(aes(x = age, y = friend_count),data = pf) +
coord_cartesian(xlim = (13,90)) +
ggplot(aes(x = age, y = friend_count),data = pf) +
coord_cartesian(xlim = c(13,90)) +
geom_point(alpha = 0.05,
position = position_jitter(height = 0),
color = "red") +
coord_trans(y = "sqrt") +
geom_line(stat = "summary", fun.y = mean) +
geom_line(stat = "summary", fun.y = quantile, fun.args = list(probs = .9))
ggplot(aes(x = age, y = friend_count),data = pf) +
coord_cartesian(xlim = c(13,90)) +
geom_point(alpha = 0.05,
position = position_jitter(height = 0),
color = "red") +
coord_trans(y = "sqrt") +
geom_line(stat = "summary", fun.y = mean) +
geom_line(stat = "summary", fun.y = quantile, fun.args = list(probs = .9),
linetype = 2, color = "blue")
ggplot(aes(x = age, y = friend_count),data = pf) +
coord_cartesian(xlim = c(13,90)) +
geom_point(alpha = 0.05,
position = position_jitter(height = 0),
color = "red") +
coord_trans(y = "sqrt") +
geom_line(stat = "summary", fun.y = mean) +
geom_line(stat = "summary", fun.y = quantile, fun.args = list(probs = .9),
linetype = 2, color = "blue") +
geom_line(stat = "summary", fun.y = quantile, fun.args = list(probs = .1),
linetype = 2, color = "blue")
ggplot(aes(x = age, y = friend_count),data = pf) +
coord_cartesian(xlim = c(13,90)) +
geom_point(alpha = 0.05,
position = position_jitter(height = 0),
color = "red") +
coord_trans(y = "sqrt") +
geom_line(stat = "summary", fun.y = mean) +
geom_line(stat = "summary", fun.y = quantile, fun.args = list(probs = .9),
linetype = 2, color = "blue") +
geom_line(stat = "summary", fun.y = quantile, fun.args = list(probs = .5),
color = "blue") +
geom_line(stat = "summary", fun.y = quantile, fun.args = list(probs = .1),
linetype = 2, color = "blue")
?coord_cartesian
library(ggplot2)
ggplot(mtcars,aes(disp,wt)) +
geom_point() +
geom_smooth()
library(ggplot2)
p <- ggplot(mtcars,aes(disp,wt)) +
geom_point() +
geom_smooth()
p + scale_x_continuous(limits = c(325,500))
library(ggplot2)
p <- ggplot(mtcars,aes(disp,wt)) +
geom_point() +
geom_smooth()
p + scale_x_continuous(limits = c(325,500))
p + coord_cartesian(xlim = c(325,500))
library(ggplot2)
p <- ggplot(mtcars,aes(disp,wt)) +
geom_point() +
geom_smooth()
p
p + scale_x_continuous(limits = c(325,500))
p + coord_cartesian(xlim = c(325,500))
library(ggplot2)
p <- ggplot(mtcars,aes(disp,wt)) +
geom_point() +
geom_smooth()
p
p + scale_x_continuous(limits = c(325,500))
p + coord_cartesian(xlim = c(325,500),expand = False)
library(ggplot2)
p <- ggplot(mtcars,aes(disp,wt)) +
geom_point() +
geom_smooth()
p
p + scale_x_continuous(limits = c(325,500))
p + coord_cartesian(xlim = c(325,500),expand = FALSE)
library(ggplot2)
p <- ggplot(mtcars,aes(disp,wt)) +
geom_point() +
geom_smooth()
p
p + scale_x_continuous(limits = c(325,500))
p + coord_cartesian(xlim = c(325,500),expand = FALSE)
P + coord_cartesian(expand = FALSE)
library(ggplot2)
p <- ggplot(mtcars,aes(disp,wt)) +
geom_point() +
geom_smooth()
p
p + scale_x_continuous(limits = c(325,500))
p + coord_cartesian(xlim = c(325,500),expand = FALSE)
p + coord_cartesian(expand = FALSE)
d <- ggplot(diamonds,aes(carat,price)) +
stat_bin2d(bins = 25,color = "white")
d
d <- ggplot(diamonds,aes(carat,price)) +
stat_bin2d(bins = 25,color = "white")
d
d + scale_x_continuous(limits = c(0,1))
d <- ggplot(diamonds,aes(carat,price)) +
stat_bin2d(bins = 25,color = "white")
d
d + scale_x_continuous(limits = c(0,1))
d + coord_cartesian(xlim = c(0,1))
d <- ggplot(diamonds,aes(carat,price)) +
stat_bin2d(bins = 25,color = "white")
d
d + scale_x_continuous(limits = c(0,1))
d + coord_cartesian(xlim = c(0,1),expand = FALSE)
?quantile
knitr::opts_chunk$set(echo = TRUE)
quantile(x <- rnorm(1001)) # Extremes & Quartiles by default
quantile(x, probs = c(.1, .5, 1, 2, 5, 10, 50, NA)/100)
?rnorm
?fun.y
??fun.y
ggplot(aes(x = age, y = friend_count),data = pf) +
coord_cartesian(xlim = c(13,70)) +
geom_point(alpha = 0.05,
position = position_jitter(height = 0),
color = "red") +
coord_trans(y = "sqrt") +
geom_line(stat = "summary", fun.y = mean) +
geom_line(stat = "summary", fun.y = quantile, fun.args = list(probs = .9),
linetype = 2, color = "blue") +
geom_line(stat = "summary", fun.y = quantile, fun.args = list(probs = .5),
color = "blue") +
geom_line(stat = "summary", fun.y = quantile, fun.args = list(probs = .1),
linetype = 2, color = "blue")
ggplot(aes(x = age, y = friend_count),data = pf) +
coord_cartesian(xlim = c(13,70)，ylim = c(0,1000)) +
ggplot(aes(x = age, y = friend_count),data = pf) +
coord_cartesian(xlim = c(13,70), ylim = c(0,1000)) +
geom_point(alpha = 0.05,
position = position_jitter(height = 0),
color = "red") +
coord_trans(y = "sqrt") +
geom_line(stat = "summary", fun.y = mean) +
geom_line(stat = "summary", fun.y = quantile, fun.args = list(probs = .9),
linetype = 2, color = "blue") +
geom_line(stat = "summary", fun.y = quantile, fun.args = list(probs = .5),
color = "blue") +
geom_line(stat = "summary", fun.y = quantile, fun.args = list(probs = .1),
linetype = 2, color = "blue")
ggplot(aes(x = age, y = friend_count),data = pf) +
coord_cartesian(xlim = c(13,70), ylim = c(0,1000)) +
geom_point(alpha = 0.05,
position = position_jitter(height = 0),
color = "red") +
coord_trans(y = "sqrt") +
geom_line(stat = "summary", fun.y = mean) +
geom_line(stat = "summary", fun.y = quantile, fun.args = list(probs = .9),
linetype = 2, color = "blue") +
geom_line(stat = "summary", fun.y = quantile, fun.args = list(probs = .5),
color = "blue") +
geom_line(stat = "summary", fun.y = quantile, fun.args = list(probs = .1),
linetype = 2, color = "blue")
ggplot(aes(x = age, y = friend_count),data = pf) +
geom_point(alpha = 0.05,
position = position_jitter(height = 0),
color = "red") +
coord_trans(y = "sqrt") +
geom_line(stat = "summary", fun.y = mean) +
geom_line(stat = "summary", fun.y = quantile, fun.args = list(probs = .9),
linetype = 2, color = "blue") +
geom_line(stat = "summary", fun.y = quantile, fun.args = list(probs = .5),
color = "blue") +
geom_line(stat = "summary", fun.y = quantile, fun.args = list(probs = .1),
linetype = 2, color = "blue") +
coord_cartesian(xlim = c(13,70), ylim = c(0,1000))
setwd("D:/DAND/Learning R")

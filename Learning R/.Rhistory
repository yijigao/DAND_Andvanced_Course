data = subset(pf, tenure > 0)) +
geom_line(aes(color = year_joined.bucket),
stat = "summary",
fun.y = mean)
ggplot(aes(x = 90 * round(tenure / 90), y = friendships_initiated / tenure),
data = subset(pf, tenure > 0)) +
geom_line(aes(color = year_joined.bucket),
stat = "summary",
fun.y = mean)
ggplot(aes(x = tenure, y = friendships_initiated / tenure),
data = subset(pf, tenure >= 1)) +
geom_smooth(color = year_joined.bucket)
ggplot(aes(x = tenure, y = friendships_initiated / tenure),
data = subset(pf, tenure >= 1)) +
geom_smooth(aes(year_joined.bucket))
ggplot(aes(x = tenure, y = friendships_initiated / tenure),
data = subset(pf, tenure >= 1)) +
geom_smooth(aes(year_joined.bucket), stat = "summary", fun.y = mean)
ggplot(aes(x = tenure, y = friendships_initiated / tenure),
data = subset(pf, tenure >= 1)) +
geom_smooth(aes(color = year_joined.bucket), stat = "summary", fun.y = mean)
ggplot(aes(x = tenure, y = friendships_initiated / tenure),
data = subset(pf, tenure >= 1)) +
geom_smooth(aes(color = year_joined.bucket),method = "lm" stat = "summary", fun.y = mean)
ggplot(aes(x = tenure, y = friendships_initiated / tenure),
data = subset(pf, tenure >= 1)) +
geom_smooth(aes(color = year_joined.bucket),method = "lm" , stat = "summary", fun.y = mean)
yo <- read.csv("yogurt.csv")
str(yo)
yo$id <- factor(yo$id)
str(yo)
ggplot(yo, aes(price)) +
geom_histogram()
ggplot(yo, aes(price), binwidth = 10) +
geom_histogram()
ggplot(yo, aes(price, binwidth = 10)) +
geom_histogram()
geom_histogram(binwidth = 10)
ggplot(yo, aes(price)) +
geom_histogram(binwidth = 10)
ggplot(yo, aes(price)) +
geom_histogram(binwidth = 20)
ggplot(yo, aes(price)) +
geom_histogram(binwidth = 1)
ggplot(yo, aes(price)) +
geom_histogram(binwidth = 2)
ggplot(yo, aes(price)) +
geom_histogram(binwidth = 3)
ggplot(yo, aes(price)) +
geom_histogram(binwidth = 5)
ggplot(yo, aes(price)) +
geom_histogram(binwidth = 10)
summary(yo)
length(unique(yo$price))
table(yo$price)
?transform
library(ggplot2)
pf <- read.csv("pseudo_facebook.tsv", sep = "\t")
ggplot(subset(pf, !is.na(gender)), aes(gender, age)) +
geom_boxplot()
ggplot(subset(pf, !is.na(gender)), aes(gender, age)) +
geom_boxplot() +
stat_summary(fun.y = mean, geom = "point", shape =4)
ggplot(subset(pf, !is.na(gender)), aes(age, friend_count)) +
geom_line(aes(color = gender), stat = "summary", fun.y = median)
library(dplyr)
pf.fc_by_age_gender <- subset(pf, !is.na(gender)) %>%
group_by(age, gender) %>%
summarise(mean_friend_count = mean(friend_count),
median_friend_count = median(friend_count),
n = n()) %>%
ungroup() %>%
arrange(age)
head(pf.fc_by_age_gender)
tail(pf.fc_by_age_gender)
ggplot(pf.fc_by_age_gender,aes(age, median_friend_count)) +
geom_line(aes(color=gender))
library(reshape2)
pf.fc_by_age_gender.wide <- dcast(pf.fc_by_age_gender,
age ~ gender,
value.var = "median_friend_count")
head(pf.fc_by_age_gender.wide)
# Plot the retio of the female to male median firend counts using the data frame pf.fc_by_age_gender.wide
ggplot(pf.fc_by_age_gender.wide, aes(age, female / male)) +
geom_line() +
geom_hline(yintercept = 1, alpha = 0.3, linetype =2, color = "red")
pf$year_joined <- floor(2014 - pf$tenure/365)
table(pf$year_joined)
# Create a new variable in the data frame called year_joined.bucket by using the cut function on the variable year_joined
# (2004, 2009],(2009,2011], (2011,2012], (2012,2014]
pf$year_joined.bucket <- cut(pf$year_joined,
c(2004,2009,2011,2012,2014))
table(pf$year_joined.bucket, useNA = "ifany")
ggplot(subset(pf, !is.na(year_joined.bucket)), aes(age, friend_count)) +
geom_line(aes(color = year_joined.bucket), stat = "summary", fun.y = median)
ggplot(subset(pf, !is.na(year_joined.bucket)), aes(age, friend_count)) +
geom_line(aes(color = year_joined.bucket), stat = "summary", fun.y = mean) +
geom_line(stat = "summary", fun.y = mean, linetype = 2 )
firending_rate <- with(subset(pf, tenure >= 1), friend_count / tenure)
summary(firending_rate)
ggplot(subset(pf, !is.na(year_joined.bucket) & tenure >= 1), aes(tenure, friendships_initiated / tenure)) +
geom_line(aes(color = year_joined.bucket), stat = "summary", fun.y = mean)
ggplot(aes(x = tenure, y = friendships_initiated / tenure),
data = subset(pf, tenure >= 1)) +
geom_line(aes(color = year_joined.bucket),
stat = 'summary',
fun.y = mean)
ggplot(aes(x = 7 * round(tenure / 7), y = friendships_initiated / tenure),
data = subset(pf, tenure > 0)) +
geom_line(aes(color = year_joined.bucket),
stat = "summary",
fun.y = mean)
ggplot(aes(x = 30 * round(tenure / 30), y = friendships_initiated / tenure),
data = subset(pf, tenure > 0)) +
geom_line(aes(color = year_joined.bucket),
stat = "summary",
fun.y = mean)
ggplot(aes(x = 90 * round(tenure / 90), y = friendships_initiated / tenure),
data = subset(pf, tenure > 0)) +
geom_line(aes(color = year_joined.bucket),
stat = "summary",
fun.y = mean)
ggplot(aes(x = tenure, y = friendships_initiated / tenure),
data = subset(pf, tenure >= 1)) +
geom_smooth(aes(color = year_joined.bucket),method = "lm" , stat = "summary", fun.y = mean)
yo <- read.csv("yogurt.csv")
str(yo)
yo$id <- factor(yo$id)
str(yo)
ggplot(yo, aes(price)) +
geom_histogram(binwidth = 10)
summary(yo)
length(unique(yo$price))
table(yo$price)
yo$all.purchases <- transform(yo)
nci <- read.table("nci.tsv")
colnames(nci) <- c(1:64)
nci.long.samp <- melt(as.matrix(nci[1:200,]))
names(nci.long.samp) <- c("gene", "case", "value")
head(nci.long.samp)
ggplot(aes(y = gene, x = case, fill = value),
data = nci.long.samp) +
geom_tile() +
scale_fill_gradientn(colours = colorRampPalette(c("blue", "red"))(100))
head(airquality)
transform(airquality, Ozone = -Ozone)
transform(airquality, new = -Ozne, Temp = (Temp-32)/1.8)
transform(airquality, new = -Ozone, Temp = (Temp-32)/1.8)
attach(airquality)
transform(Ozone, logOzone = log(Zone))
transform(Ozone, logOzone = log(Ozone))
detach(airquality)
head(transform())
head(airquality)
head(yo)
tail(yo)
head(yo)
yo$time
attach(yo)
yo$all.purchases <- transform(yo, all.purchases = (strawberry + blueberry + pina.colada + plain + mixed.berry ))
detach(yo)
head(yo$all.purchases)
yo <- subset(yo, -all.purchases)
yo <- subset(yo, -yo$all.purchases)
head(yo$price)
head(yo$all.purchases)
yo <- subset(yo, -yo$all.purchases)
yo <- subset(yo, -all.purchases)
yo <- subset(yo, select = -all.purchases)
head(yo)
attach(yo)
yo$all.purchases <- transform(yo, all.purchases = (strawberry + blueberry + pina.colada + plain + mixed.berry ))
detach(yo)
head(yo$all.purchases)
attach(airquality)
transform(Ozone, logOzone = log(Ozone))
detach(airquality)
yo <- subset(yo, select = -all.purchases)
head(airquality)
transform(airquality, Ozone = -Ozone)
head(transform(airquality, Ozone = -Ozone))
head(airquality)
head(transform(airquality, Ozone = -Ozone))
head(transform(airquality, new = -Ozone, Temp = (Temp-32)/1.8))
head(transform(Ozone, logOzone = log(Ozone)))
attach(airquality)
head(transform(Ozone, logOzone = log(Ozone)))
detach(airquality)
head(transform(yo, all.purchases = (strawberry + blueberry + pina.colada + plain + mixed.berry )))
yo <- transform(yo, all.purchases = (strawberry + blueberry + pina.colada + plain + mixed.berry ))
yo$all.purchases
head(yo)
ggplot(yo, aes(all.purchases)) +
geom_histogram()
ggplot(yo, aes(all.purchases)) +
geom_histogram(binwidth = 10)
ggplot(yo, aes(all.purchases)) +
geom_histogram(binwidth = 5)
ggplot(yo, aes(all.purchases)) +
geom_histogram(binwidth = 1)
ggplot(yo, aes(all.purchases)) +
geom_histogram(binwidth = 1, fill = "blue")
ggplot(yo, aes(time, price)) +
geom_point()
ggplot(yo, aes(time, price)) +
geom_point(alpha = 1/10)
ggplot(yo, aes(time, price)) +
geom_point(alpha = 1/20)
ggplot(yo, aes(time, price)) +
geom_jitter(alpha = 1/4, shape = 21, fill = I("#F79420"))
set.seed(4230)
sample.ids <- sample(levels(yo$id), 16)
ggplot(subset(yo, id %in% sample.ids), time, price) +
facet_wrap(~id) +
geom_line() +
geom_point(aes(size = all.purchases), pch = 1)
ggplot(subset(yo, id %in% sample.ids), aes(time, price)) +
facet_wrap(~id) +
geom_line() +
geom_point(aes(size = all.purchases), pch = 1)
set.seed(4552)
sample.ids <- sample(levels(yo$id), 16)
ggplot(subset(yo, id %in% sample.ids), aes(time, price)) +
facet_wrap(~id) +
geom_line() +
geom_point(aes(size = all.purchases), pch = 1)
ggplot(subset(yo, id %in% sample.ids), aes(time, price)) +
facet_wrap(~id) +
geom_line() +
geom_point(aes(size = all.purchases), pch = 2)
ggplot(subset(yo, id %in% sample.ids), aes(time, price)) +
facet_wrap(~id) +
geom_line() +
geom_point(aes(size = all.purchases), pch = 3)
ggplot(subset(yo, id %in% sample.ids), aes(time, price)) +
facet_wrap(~id) +
geom_line() +
geom_point(aes(color = all.purchases))
ggplot(subset(yo, id %in% sample.ids), aes(time, price)) +
facet_wrap(~id) +
geom_line() +
geom_point(aes(shaple = all.purchases))
ggplot(subset(yo, id %in% sample.ids), aes(time, price)) +
facet_wrap(~id) +
geom_line() +
geom_point(aes(shape = all.purchases))
ggplot(subset(yo, id %in% sample.ids), aes(time, price)) +
facet_wrap(~id) +
geom_line() +
geom_point(aes(size = all.purchases), pch = 1)
ggplot(subset(yo, id %in% sample.ids), aes(time, price)) +
facet_wrap(~id) +
geom_line() +
geom_point(aes(size = all.purchases), shape = 1)
ggplot(subset(yo, id %in% sample.ids), aes(time, price)) +
facet_wrap(~id) +
geom_line() +
geom_point(aes(size = all.purchases), shape = 2)
ggplot(subset(yo, id %in% sample.ids), aes(time, price)) +
facet_wrap(~id) +
geom_line() +
geom_point(aes(size = all.purchases), shape = 3)
ggplot(subset(yo, id %in% sample.ids), aes(time, price)) +
facet_wrap(~id) +
geom_line() +
geom_point(aes(size = all.purchases), shape = 10)
ggplot(subset(yo, id %in% sample.ids), aes(time, price)) +
facet_wrap(~id) +
geom_line() +
geom_point(aes(size = all.purchases), shape = 11)
ggplot(subset(yo, id %in% sample.ids), aes(time, price)) +
facet_wrap(~id) +
geom_line() +
geom_point(aes(size = all.purchases), shape = 1)
set.seed(123)
sample.ids <- sample(levels(yo$id), 16)
ggplot(subset(yo, id %in% sample.ids), aes(time, price)) +
facet_wrap(~id) +
geom_line() +
geom_point(aes(size = all.purchases), shape = 1)
install.packages(GGally)
install.packages("GGally")
set.seed(1836)
pf_subset <- pf[,c(2:15)]
names(pf_subset)
ggpairs(pf_subset[sample.int(nrow(pf_subset),1000),])
library(GGally)
theme_set(theme_minimal(20))
ggpairs(pf_subset[sample.int(nrow(pf_subset),1000),])
library(GGally)
theme_set(theme_minimal(20))
set.seed(1836)
pf_subset <- pf[,c(2:15)]
names(pf_subset)
ggpairs(pf_subset[sample.int(nrow(pf_subset),1000),])
nci <- read.table("nci.tsv")
colnames(nci) <- c(1:64)
nci <- read.table("nci.tsv")
colnames(nci) <- c(1:64)
nci.long.samp <- melt(as.matrix(nci[1:200,]))
names(nci.long.samp) <- c("gene", "case", "value")
head(nci.long.samp)
ggplot(aes(y = gene, x = case, fill = value),
data = nci.long.samp) +
geom_tile() +
scale_fill_gradientn(colours = colorRampPalette(c("blue", "red"))(100))
setwd("D:/DAND/Learning R")
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
ggplot(diamonds, aes(price)) +
geom_histogram(fill = "qual") +
facet_wrap(~color)
ggplot(diamonds, aes(price)) +
geom_histogram() +
facet_wrap(~color)
ggplot(diamonds, aes(price)) +
geom_histogram(binwidth = 100) +
facet_wrap(~color)
ggplot(diamonds, aes(price)) +
geom_histogram(color = cut) +
facet_wrap(~color)
ggplot(diamonds, aes(price)) +
geom_histogram(aes(color = cut)) +
facet_wrap(~color)
ggplot(diamonds, aes(price)) +
geom_histogram(aes(color = cut),scale_fill_brewer(type = "qual")) +
facet_wrap(~color)
ggplot(diamonds, aes(price)) +
geom_histogram(aes(color = cut)) +
scale_fill_brewer(type = "qual")
ggplot(diamonds, aes(price)) +
geom_histogram(aes(color = cut)) +
facet_wrap(~color)
ggplot(diamonds, aes(price), scale_fill_brewer(type = "quel")) +
geom_histogram(aes(color = cut)) +
facet_wrap(~color)
ggplot(diamonds, aes(price)) +
geom_histogram(aes(color = cut, scale_fill_brewer("quel"))) +
facet_wrap(~color)
ggplot(diamonds, aes(price)) +
geom_histogram(aes(color = cut),scale_fill_brewer(type = "quel")) +
facet_wrap(~color)
ggplot(diamonds, aes(price)) +
geom_histogram(aes(color = cut),scale_fill_brewer(type = "qual")) +
facet_wrap(~color)
ggplot(diamonds, aes(price)) +
geom_histogram(aes(color = cut)) +
scale_fill_brewer(type = "qual") +
facet_wrap(~color)
ggplot(diamonds, aes(price)) +
geom_histogram(aes(color = cut, scale_fill_brewer(type = "qual"))) +
facet_wrap(~color)
ggplot(diamonds, aes(price), scale_fill_brewer(type = "qual")) +
geom_histogram(aes(color = cut)) +
facet_wrap(~color)
ggplot(diamonds, aes(price), scale_fill_brewer(type = "qual")) +
scale_x_log10()
ggplot(diamonds, aes(price)) +
geom_histogram(aes(color = cut)) +
scale_x_log10()
ggplot(diamonds, aes(price)) +
geom_histogram(aes(color = cut)) +
facet_wrap(~color) +
scale_x_log10()
ggplot(diamonds, aes(price)) +
geom_histogram(aes(color = cut)) +
facet_wrap(~color) +
scale_fill_brewer(type = "qual")
ggplot(diamonds, aes(price)) +
geom_histogram(aes(color = cut)) +
facet_wrap(~color) +
scale_fill_brewer(type = "qual") +
scale_x_log10()
ggplot(diamonds, aes(price)) +
geom_histogram(aes(color = cut)) +
scale_fill_brewer(type = "qual") +
facet_wrap(~color) +
scale_x_log10()
ggplot(diamonds, aes(price)) +
geom_histogram(aes(color = cut), scale_fill_brewer(type = "seq")) +
facet_wrap(~color) +
scale_x_log10()
?scale_fill_brewer
ggplot(diamonds, aes(x = price, fill = cut))
ggplot(diamonds, aes(x = price, fill = cut)) +
geom_histogram()
ggplot(diamonds, aes(x = price, fill = cut)) +
geom_histogram() +
scale_fill_brewer(type = "qual")
ggplot(diamonds, aes(x = price, fill = cut)) +
geom_histogram() +
scale_fill_brewer(type = "qual") +
facet_wrap(~color)
library(ggplot2)
ggplot(diamonds, aes(x = price, fill = cut)) +
geom_histogram() +
scale_fill_brewer(type = "qual") +
facet_wrap(~color) +
scale_x_log10()
ggplot(diamonds, aes(x = price)) +
geom_histogram(fill = cut) +
scale_fill_brewer(type = "qual") +
facet_wrap(~color) +
scale_x_log10()
ggplot(diamonds, aes(x = price)) +
geom_histogram(color = cut) +
scale_fill_brewer(type = "qual") +
facet_wrap(~color) +
scale_x_log10()
ggplot(diamonds, aes(x = price)) +
geom_histogram(aes(fill = cut)) +
scale_fill_brewer(type = "qual") +
facet_wrap(~color) +
scale_x_log10()
ggplot(diamonds, aes(x = price)) +
geom_histogram(aes(color = cut)) +
scale_fill_brewer(type = "qual") +
facet_wrap(~color) +
scale_x_log10()
ggplot(diamonds, aes(x = price)) +
geom_histogram(aes(fill = cut)) +
scale_fill_brewer(type = "qual") +
facet_wrap(~color) +
scale_x_log10()
ggplot(data = diamonds, aes(x = table, y = price, color = cut)) +
geom_point() +
scale_color_brewer(type = "qual")
ggplot(data = diamonds, aes(x = table, y = price, color = cut)) +
geom_point() +
scale_color_brewer(type = "qual") +
xlim(0,80)
ggplot(data = diamonds, aes(x = table, y = price, color = cut)) +
geom_point() +
scale_color_brewer(type = "qual") +
ggplot(data = diamonds, aes(x = table, y = price, color = cut)) +
geom_point() +
scale_color_brewer(type = "qual")
ggplot(data = diamonds, aes(x = table, y = price, color = cut)) +
geom_point() +
scale_color_brewer(type = "qual")
ggplot(data = diamonds, aes(x = table, y = price, color = cut)) +
geom_point() +
scale_color_brewer(type = "qual") +
xlim(0, quantile(table, .95))
ggplot(data = diamonds, aes(x = table, y = price, color = cut)) +
geom_point() +
scale_color_brewer(type = "qual") +
xlim(0, quantile(diamonds$table, .95))
ggplot(data = diamonds, aes(x = table, y = price, color = cut)) +
geom_point() +
scale_color_brewer(type = "qual")
ggplot(data = diamonds, aes(x = table, y = price, color = cut)) +
geom_point() +
scale_color_brewer(type = "qual") +
scale_x_continuous(breaks = seq(50,80,2))
ggplot(data = diamonds, aes(x = table, y = price, color = cut)) +
geom_point() +
scale_color_brewer(type = "qual") +
scale_x_continuous(breaks = seq(50,80,4))
ggplot(data = diamonds, aes(x = table, y = price, color = cut)) +
geom_point() +
scale_color_brewer(type = "qual") +
scale_x_continuous(breaks = seq(50,80,2))
ggplot(data = diamonds, aes(x = table, y = price, color = cut)) +
geom_point() +
scale_color_brewer(type = "qual") +
scale_x_continuous(limits = c(50,80), breaks = seq(50,80,2))
ggplot(data = diamonds, aes(x = table, y = price, color = cut)) +
geom_point() +
scale_color_brewer(type = "qual") +
scale_x_continuous(limits = c(50,80), breaks = seq(50,80,2))
diamonds$volume <- subset(diamonds, x * y * z)
diamonds$volume <- with(diamonds, x * y * z)
names(diamonds)
head(diamonds)
ggplot(data = diamonds, aes(x = volume, y = price, color = clarity)) +
geom_point() +
scale_color_brewer(type = "div")
ggplot(data = diamonds, aes(x = volume, y = price, color = clarity)) +
geom_point() +
scale_color_brewer(type = "div") +
scale_y_log10()
ggplot(data = diamonds, aes(x = volume, y = price, color = clarity)) +
geom_point() +
scale_color_brewer(type = "div") +
scale_y_log10()
ggplot(data = diamonds, aes(x = volume, y = price, color = clarity)) +
geom_point() +
scale_y_log10() +
scale_color_brewer(type = "div")
ggplot(data = diamonds, aes(x = volume, y = price, color = clarity)) +
geom_point() +
xlim(0, quantile(diamonds$volume, .99))
ggplot(data = diamonds, aes(x = volume, y = price, color = clarity)) +
geom_point() +
xlim(0, quantile(diamonds$volume, .99)) +
scale_color_brewer(type = "div") +
scale_y_log10()
ggplot(data = diamonds, aes(x = volume, y = price, color = clarity)) +
geom_point() +
xlim(0, quantile(diamonds$volume, .99)) +
scale_color_brewer(type = "div")
ggplot(data = diamonds, aes(x = volume, y = price, color = clarity)) +
geom_point() +
xlim(0, quantile(diamonds$volume, .99)) +
scale_color_brewer(type = "div") +
scale_y_log10()
ggplot(data = subset(diamonds, volume != 0), aes(x = volume, y = price, color = clarity)) +
geom_point() +
xlim(0, quantile(diamonds$volume, .99)) +
scale_color_brewer(type = "div") +
scale_y_log10()

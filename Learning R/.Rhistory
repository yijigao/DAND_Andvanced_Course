ggplot(aes(depth, price), data = diamonds) +
geom_point(alpha = 0.01, color = "red") +
scale_x_continuous(breaks = c(0, 80))
with(diamonds, cor.test(depth, price))
ggplot(data = diamonds, aes(carat, price)) +
geom_point() +
xlim(0, quantile(diamonds$carat, .99))
names(diamonds)
diamonds$volume <- diamonds$x * diamonds$y * diamonds$z
ggplot(diamonds,aes(volume, price)) +
geom_point()
count(diamonds$volume ==  0)
library(plyr)
count(diamonds$volume ==  0)
with(subset(diamonds, volume != 0 & volume < 800), volume, price)
# what's the correlation of price and volume?
# Exclude diamends that have a vulume of 0 and that are greater than or equal to 800
with(subset(diamonds, volume != 0 & volume < 800), cor.test(volume, price))
# Subset the data to exclude diamends with a volume greater than or equal to 800, Also, exclude diamends with a volume of 0.
# Adjust the transparency of the points and add a linear model to the plot.
ggplot(subset(diamonds, volume !=0 & volume < 800), aes(volume, price)) +
geom_point()
# Subset the data to exclude diamends with a volume greater than or equal to 800, Also, exclude diamends with a volume of 0.
# Adjust the transparency of the points and add a linear model to the plot.
ggplot(subset(diamonds, volume !=0 & volume < 800), aes(volume, price)) +
geom_point() +
geom_smooth()
# Subset the data to exclude diamends with a volume greater than or equal to 800, Also, exclude diamends with a volume of 0.
# Adjust the transparency of the points and add a linear model to the plot.
ggplot(subset(diamonds, volume !=0 & volume < 800), aes(volume, price)) +
geom_point() +
geom_smooth(method = "lm")
?geom_smooth
library(dbplyr)
library(dplyr)
detach("package:plyr", unload = TRUE)
detach("package:plyr", unload=TRUE)
library(dplyr)
library(dplyr)
detach("package:plyr", unload=TRUE)
detach("plyr", unload=TRUE)
# import data set
library(ggplot2)
dim(diamonds)
# Create a scatterplot of price vs x
ggplot(aes(x, price), data = diamonds) +
geom_point()
# correlation between price and x
with(diamonds, cor.test(x, price))
# correlation betweenn price and y
with(diamonds, cor.test(y, price))
# correlation between price and z
with(diamonds, cor.test(z, price))
# create a simple scatter plot of price vs depth
ggplot(aes(depth, price), data = diamonds) +
geom_point(color = "red")
# Change the code to make the transparency of the point to
# be 1/100 of what they are now and mark the x-axis every 2
# units.
ggplot(aes(depth, price), data = diamonds) +
geom_point(alpha = 0.01, color = "red") +
scale_x_continuous(breaks = c(0,80,2))
quantile(diamonds$depth,.95)
# most diamends are between what value of depth
ggplot(aes(depth, price), data = diamonds) +
geom_point(alpha = 0.01, color = "red") +
scale_x_continuous(breaks = c(0, 80))
# correlation of depth vs price
with(diamonds, cor.test(depth, price))
# Create a scatter plot of price vs carat and omit the top 1% carat values
ggplot(data = diamonds, aes(carat, price)) +
geom_point() +
xlim(0, quantile(diamonds$carat, .99))
names(diamonds)
diamonds$volume <- diamonds$x * diamonds$y * diamonds$z
ggplot(diamonds,aes(volume, price)) +
geom_point()
# how many diamends have 0 volume?
library(plyr)
count(diamonds$volume ==  0)
# what's the correlation of price and volume?
# Exclude diamends that have a vulume of 0 and that are greater than or equal to 800
with(subset(diamonds, volume != 0 & volume < 800), cor.test(volume, price))
# Subset the data to exclude diamends with a volume greater than or equal to 800, Also, exclude diamends with a volume of 0.
# Adjust the transparency of the points and add a linear model to the plot.
ggplot(subset(diamonds, volume !=0 & volume < 800), aes(volume, price)) +
geom_point() +
geom_smooth(method = "lm")
library(dplyr)
detach("package:plyr", unload=TRUE)
detach("package:plyr", unload=TRUE)
library(ggplot2)
pf <- read.csv("pseudo_facebook.tsv", sep = "\t")
ggplot(subset(pf, !is.na(gender)), aes(gender, age)) +
geom_boxplot()
ggplot(subset(pf, !is.na(gender)), aes(gender, age)) +
geom_boxplot() +
stat_summary(fun.y = mean, geom = "point", shape =4)
ggplot(subset(pf, !is.na(gender)), aes(age, friend_count)) +
geom_line(aes(color = gender), stat = "summary", fun.y = median)
library(dplyr)
pf.fc_by_age_gender <- subset(pf, !is.na(gender)) %>%
group_by(age, gender) %>%
summarise(mean_friend_count = mean(friend_count),
median_friend_count = median(friend_count),
n = n()) %>%
ungroup() %>%
arrange(age)
head(pf.fc_by_age_gender)
tail(pf.fc_by_age_gender)
ggplot(pf.fc_by_age_gender,aes(age, median_friend_count)) +
geom_line(aes(color=gender))
library(reshape2)
pf.fc_by_age_gender.wide <- dcast(pf.fc_by_age_gender,
age ~ gender,
value.var = "median_friend_count")
head(pf.fc_by_age_gender.wide)
# Plot the retio of the female to male median firend counts using the data frame pf.fc_by_age_gender.wide
ggplot(pf.fc_by_age_gender.wide, aes(age, female / male)) +
geom_line() +
geom_hline(yintercept = 1, alpha = 0.3, linetype =2, color = "red")
pf$year_joined <- floor(2014 - pf$tenure/365)
table(pf$year_joined)
# Create a new variable in the data frame called year_joined.bucket by using the cut function on the variable year_joined
# (2004, 2009],(2009,2011], (2011,2012], (2012,2014]
pf$year_joined.bucket <- cut(pf$year_joined,
c(2004,2009,2011,2012,2014))
table(pf$year_joined.bucket, useNA = "ifany")
ggplot(subset(pf, !is.na(year_joined.bucket)), aes(age, friend_count)) +
geom_line(aes(color = year_joined.bucket), stat = "summary", fun.y = median)
ggplot(subset(pf, !is.na(year_joined.bucket)), aes(age, friend_count)) +
geom_line(aes(color = year_joined.bucket), stat = "summary", fun.y = median) +
geom_line(stat = "summary", fun.y = mean, lintype = 2 )
library(ggplot2)
pf <- read.csv("pseudo_facebook.tsv", sep = "\t")
ggplot(subset(pf, !is.na(gender)), aes(gender, age)) +
geom_boxplot()
ggplot(subset(pf, !is.na(gender)), aes(gender, age)) +
geom_boxplot() +
stat_summary(fun.y = mean, geom = "point", shape =4)
ggplot(subset(pf, !is.na(gender)), aes(age, friend_count)) +
geom_line(aes(color = gender), stat = "summary", fun.y = median)
library(dplyr)
pf.fc_by_age_gender <- subset(pf, !is.na(gender)) %>%
group_by(age, gender) %>%
summarise(mean_friend_count = mean(friend_count),
median_friend_count = median(friend_count),
n = n()) %>%
ungroup() %>%
arrange(age)
head(pf.fc_by_age_gender)
tail(pf.fc_by_age_gender)
ggplot(pf.fc_by_age_gender,aes(age, median_friend_count)) +
geom_line(aes(color=gender))
library(reshape2)
pf.fc_by_age_gender.wide <- dcast(pf.fc_by_age_gender,
age ~ gender,
value.var = "median_friend_count")
head(pf.fc_by_age_gender.wide)
# Plot the retio of the female to male median firend counts using the data frame pf.fc_by_age_gender.wide
ggplot(pf.fc_by_age_gender.wide, aes(age, female / male)) +
geom_line() +
geom_hline(yintercept = 1, alpha = 0.3, linetype =2, color = "red")
pf$year_joined <- floor(2014 - pf$tenure/365)
table(pf$year_joined)
# Create a new variable in the data frame called year_joined.bucket by using the cut function on the variable year_joined
# (2004, 2009],(2009,2011], (2011,2012], (2012,2014]
pf$year_joined.bucket <- cut(pf$year_joined,
c(2004,2009,2011,2012,2014))
table(pf$year_joined.bucket, useNA = "ifany")
ggplot(subset(pf, !is.na(year_joined.bucket)), aes(age, friend_count)) +
geom_line(aes(color = year_joined.bucket), stat = "summary", fun.y = median)
ggplot(subset(pf, !is.na(year_joined.bucket)), aes(age, friend_count)) +
geom_line(aes(color = year_joined.bucket), stat = "summary", fun.y = median) +
geom_line(stat = "summary", fun.y = mean, lintype = 2 )
ggplot(subset(pf, !is.na(year_joined.bucket)), aes(age, friend_count)) +
geom_line(aes(color = year_joined.bucket), stat = "summary", fun.y = median) +
geom_line(stat = "summary", fun.y = mean, linetype = 2 )
ggplot(subset(pf, !is.na(year_joined.bucket)), aes(age, friend_count)) +
geom_line(aes(color = year_joined.bucket), stat = "summary", fun.y = mean) +
geom_line(stat = "summary", fun.y = mean, linetype = 2 )
pf$firendind_rate <- with(subset(pf, tenure >= 24), friend_count / tenure)
pf$firendind_rate <- with(subset(pf, tenure >= 24), friend_count / tenure)
firendind_rate <- with(subset(pf, tenure >= 24), friend_count / tenure)
summary(firendind_rate)
summary(firendind_rate)
firending_rate <- with(subset(pf, tenure > 24), friend_count / tenure)
summary(firendind_rate)
firending_rate <- with(subset(pf, tenure >= 1), friend_count / tenure)
summary(firendind_rate)
firending_rate <- with(subset(pf, tenure >= 1), friend_count / tenure)
summary(firendind_rate)
firending_rate <- with(subset(pf, tenure >= 0), friend_count / tenure)
summary(firendind_rate)
firending_rate <- with(subset(pf, tenure >= 1), friend_count / tenure)
summary(firending_rate)
ggplot(subset(pf, !is.na(year_joined.bucket) & tenure >= 1), aes(tenure, firendhips_initiated)) +
geom_line(color = year_joined.bucket, stat = "summary", fun.y = mean)
ggplot(subset(pf, !is.na(year_joined.bucket) & tenure >= 1), aes(tenure, firendhips_initiated)) +
geom_line(aes(color = year_joined.bucket), stat = "summary", fun.y = mean)
ggplot(subset(pf, !is.na(year_joined.bucket) & tenure >= 1), aes(tenure, friendships_initiated)) +
geom_line(aes(color = year_joined.bucket), stat = "summary", fun.y = mean)
ggplot(subset(pf, !is.na(year_joined.bucket) & tenure >= 1), aes(tenure, friendships_initiated / tenure)) +
geom_line(aes(color = year_joined.bucket), stat = "summary", fun.y = mean)
ggplot(aes(x = tenure, y = friendships_initiated / tenure),
data = subset(pf, tenure >= 1)) +
geom_line(aes(color = year_joined.bucket),
stat = 'summary',
fun.y = mean)
ggplot(aes(x = 7 * round(tenure / 7), y = friendships_initiated / tenure),
data = subset(pf, tenure > 0)) +
geom_line(aes(color = year_joined.bucket),
stat = "summary",
fun.y = mean)
ggplot(aes(x = 30 * round(tenure / 30), y = friendships_initiated / tenure),
data = subset(pf, tenure > 0)) +
geom_line(aes(color = year_joined.bucket),
stat = "summary",
fun.y = mean)
ggplot(aes(x = 90 * round(tenure / 90), y = friendships_initiated / tenure),
data = subset(pf, tenure > 0)) +
geom_line(aes(color = year_joined.bucket),
stat = "summary",
fun.y = mean)
ggplot(aes(x = tenure, y = friendships_initiated / tenure),
data = subset(pf, tenure >= 1)) +
geom_smooth(color = year_joined.bucket)
ggplot(aes(x = tenure, y = friendships_initiated / tenure),
data = subset(pf, tenure >= 1)) +
geom_smooth(aes(year_joined.bucket))
ggplot(aes(x = tenure, y = friendships_initiated / tenure),
data = subset(pf, tenure >= 1)) +
geom_smooth(aes(year_joined.bucket), stat = "summary", fun.y = mean)
ggplot(aes(x = tenure, y = friendships_initiated / tenure),
data = subset(pf, tenure >= 1)) +
geom_smooth(aes(color = year_joined.bucket), stat = "summary", fun.y = mean)
ggplot(aes(x = tenure, y = friendships_initiated / tenure),
data = subset(pf, tenure >= 1)) +
geom_smooth(aes(color = year_joined.bucket),method = "lm" stat = "summary", fun.y = mean)
ggplot(aes(x = tenure, y = friendships_initiated / tenure),
data = subset(pf, tenure >= 1)) +
geom_smooth(aes(color = year_joined.bucket),method = "lm" , stat = "summary", fun.y = mean)
yo <- read.csv("yogurt.csv")
str(yo)
yo$id <- factor(yo$id)
str(yo)
ggplot(yo, aes(price)) +
geom_histogram()
ggplot(yo, aes(price), binwidth = 10) +
geom_histogram()
ggplot(yo, aes(price, binwidth = 10)) +
geom_histogram()
geom_histogram(binwidth = 10)
ggplot(yo, aes(price)) +
geom_histogram(binwidth = 10)
ggplot(yo, aes(price)) +
geom_histogram(binwidth = 20)
ggplot(yo, aes(price)) +
geom_histogram(binwidth = 1)
ggplot(yo, aes(price)) +
geom_histogram(binwidth = 2)
ggplot(yo, aes(price)) +
geom_histogram(binwidth = 3)
ggplot(yo, aes(price)) +
geom_histogram(binwidth = 5)
ggplot(yo, aes(price)) +
geom_histogram(binwidth = 10)
summary(yo)
length(unique(yo$price))
table(yo$price)
?transform
knitr::opts_chunk$set(echo = TRUE)
pf <- read.delim("pseudo_facebook.tsv")
names(pf)
pf$prop_initiated <- with(pf, friendships_initiated / friend_count)
head(pf)
?floor
pf$year_joined <- floor(2014 - pf$tenure / 365)
table(pf$year_joined)
pf$year_joined.bucket <- cut(pf$year_joined, c(2004,2009,2011,2012,2014))
table(pf$year_joined.bucket)
ggplot(data = pf, aes(x = tenure, y = prop_initiated, color = year_joined.bucket)) +
geom_line()
knitr::opts_chunk$set(echo = TRUE)
# 这里使用fill = cut 而不是 color = cut !
library(ggplot2)
ggplot(diamonds, aes(x = price)) +
geom_histogram(aes(fill = cut)) +
scale_fill_brewer(type = "qual") +
facet_wrap(~color) +
scale_x_log10()
# Create a scatterplot of diamond price vs table and color the points by the cut of the diamond.
# Note: a color paletter of type "qual" was used to color the scatterplot using scale_color_brewer(type = "qual")
ggplot(data = diamonds, aes(x = table, y = price, color = cut)) +
geom_point() +
scale_color_brewer(type = "qual") +
scale_x_continuous(limits = c(50,80), breaks = seq(50,80,2))
# Create a scatterplot of diamond price vs volume (x * y * z) and color the points by the clarity of diamonds.Use scale on the y-axis to take the log10 of price.We should also omit the top 1% of diamond volume from the plot
# Note: scale_color_brewer(type = "div")
ggplot(data = subset(diamonds, volume != 0), aes(x = volume, y = price, color = clarity)) +
geom_point() +
xlim(0, quantile(diamonds$volume, .99)) +
scale_color_brewer(type = "div") +
scale_y_log10()
knitr::opts_chunk$set(echo = TRUE)
# 这里使用fill = cut 而不是 color = cut !
library(ggplot2)
ggplot(diamonds, aes(x = price)) +
geom_histogram(aes(fill = cut)) +
scale_fill_brewer(type = "qual") +
facet_wrap(~color) +
scale_x_log10()
# Create a scatterplot of diamond price vs table and color the points by the cut of the diamond.
# Note: a color paletter of type "qual" was used to color the scatterplot using scale_color_brewer(type = "qual")
ggplot(data = diamonds, aes(x = table, y = price, color = cut)) +
geom_point() +
scale_color_brewer(type = "qual") +
scale_x_continuous(limits = c(50,80), breaks = seq(50,80,2))
# Create a scatterplot of diamond price vs volume (x * y * z) and color the points by the clarity of diamonds.Use scale on the y-axis to take the log10 of price.We should also omit the top 1% of diamond volume from the plot
# Note: scale_color_brewer(type = "div")
pf$volume <- with(pf, x * y * z)
# Note: scale_color_brewer(type = "div")
diamonds$volume <- with(diamonds, x * y * z)
ggplot(data = subset(diamonds, volume != 0), aes(x = volume, y = price, color = clarity)) +
geom_point() +
xlim(0, quantile(diamonds$volume, .99)) +
scale_color_brewer(type = "div") +
scale_y_log10()
pf <- read.delim("pseudo_facebook.tsv")
pf$prop_initiated <- with(pf, friendships_initiated / friend_count)
head(pf)
pf$year_joined <- floor(2014 - pf$tenure / 365)
pf$year_joined.bucket <- cut(pf$year_joined, c(2004,2009,2011,2012,2014))
# Create a line graph of the median propotion of firendship initied("prop_initiated") vs tenure and color the line by year_jonied.bucket
ggplot(data = pf, aes(x = tenure, y = prop_initiated, color = year_joined.bucket)) +
geom_line()
ggplot(data = subset(pf, !is.na(prop_initiated)), aes(x = tenure, y = prop_initiated, color = year_joined.bucket)) +
geom_line()
ggplot(data = subset(pf, !is.na(prop_initiated) & !is.na(year_joined.bucket)), aes(x = tenure, y = prop_initiated, color = year_joined.bucket)) +
geom_line()
pf$prop_initiated <- with(pf, friendships_initiated / (friend_count + 1))
head(pf)
head(pf)
pf$year_joined <- floor(2014 - pf$tenure / 365)
pf$year_joined.bucket <- cut(pf$year_joined, c(2004,2009,2011,2012,2014))
ggplot(data = subset(pf, !is.na(prop_initiated) & !is.na(year_joined.bucket)), aes(x = tenure, y = prop_initiated, color = year_joined.bucket)) +
geom_line()
pf$prop_initiated <- with(pf, friendships_initiated / friend_count)
head(pf)
ggplot(data = subset(pf, !is.na(prop_initiated) & !is.na(year_joined.bucket)), aes(x = tenure, y = prop_initiated, color = year_joined.bucket)) +
geom_line()
ggplot(data = subset(pf, !is.na(prop_initiated) & !is.na(year_joined.bucket)), aes(x = tenure, y = prop_initiated, color = year_joined.bucket)) +
geom_line(stat = "summary", fun.y = median)
pf$prop_initiated <- with(pf, friendships_initiated / friend_count + 1)
head(pf)
pf$prop_initiated <- with(pf, friendships_initiated / (friend_count + 1))
head(pf)
ggplot(data = subset(pf, !is.na(prop_initiated) & !is.na(year_joined.bucket)), aes(x = tenure, y = prop_initiated, color = year_joined.bucket)) +
geom_line(stat = "summary", fun.y = median)
pf$prop_initiated <- with(pf, friendships_initiated / (friend_count))
ggplot(data = subset(pf, !is.na(prop_initiated) & !is.na(year_joined.bucket)), aes(x = tenure, y = prop_initiated, color = year_joined.bucket)) +
geom_line(stat = "summary", fun.y = median)
pf$prop_initiated <- with(pf, friendships_initiated / (friend_count + 0.0001))
ggplot(data = subset(pf, !is.na(prop_initiated) & !is.na(year_joined.bucket)), aes(x = tenure, y = prop_initiated, color = year_joined.bucket)) +
geom_line(stat = "summary", fun.y = median)
ggplot(data = subset(pf, !is.na(prop_initiated) & !is.na(year_joined.bucket) & tenure > 1), aes(x = tenure, y = prop_initiated, color = year_joined.bucket)) +
geom_line(stat = "summary", fun.y = median)
pf$prop_initiated <- with(pf, friendships_initiated / (friend_count))
ggplot(data = subset(pf, !is.na(prop_initiated) & !is.na(year_joined.bucket) & tenure > 1), aes(x = tenure, y = prop_initiated, color = year_joined.bucket)) +
geom_line(stat = "summary", fun.y = median)
ggplot(data = subset(pf, !is.na(prop_initiated) & !is.na(year_joined.bucket) & tenure >= 1), aes(x = tenure, y = prop_initiated, color = year_joined.bucket)) +
geom_line(stat = "summary", fun.y = median)
ggplot(data = subset(pf, !is.na(prop_initiated) & !is.na(year_joined.bucket) & tenure > 0), aes(x = tenure, y = prop_initiated, color = year_joined.bucket)) +
geom_line(stat = "summary", fun.y = median)
pf$prop_initiated <- with(pf, friendships_initiated / (friend_count + 0.0001))
ggplot(data = subset(pf, !is.na(prop_initiated) & !is.na(year_joined.bucket) & tenure > 0), aes(x = tenure, y = prop_initiated, color = year_joined.bucket)) +
geom_line(stat = "summary", fun.y = median)
ggplot(data = subset(pf, !is.na(prop_initiated) & !is.na(year_joined.bucket) & tenure > 1), aes(x = tenure, y = prop_initiated, color = year_joined.bucket)) +
geom_line(stat = "summary", fun.y = median)
pf$prop_initiated <- with(pf, friendships_initiated / (friend_count))
ggplot(data = subset(pf, !is.na(prop_initiated) & !is.na(year_joined.bucket) & tenure > 1), aes(x = tenure, y = prop_initiated, color = year_joined.bucket)) +
geom_line(stat = "summary", fun.y = median)
ggplot(data = subset(pf,
!is.na(prop_initiated) &
!is.na(year_joined.bucket) &
tenure >= 1),
aes(x = tenure, y = prop_initiated, color = year_joined.bucket)) +
geom_line(stat = "summary", fun.y = median)
figure6 <- ggplot(data = subset(pf,
!is.na(prop_initiated) &
!is.na(year_joined.bucket) &
tenure >= 1),
aes(x = tenure, y = prop_initiated, color = year_joined.bucket)) +
geom_line(stat = "summary", fun.y = median)
figure6
ggplot(data = subset(pf,
!is.na(prop_initiated) &
!is.na(year_joined.bucket) &
tenure >= 1),
aes(x = tenure, y = prop_initiated, color = year_joined.bucket)) +
geom_line(stat = "summary", fun.y = median)
pf$prop_initiated <- with(pf, friendships_initiated / (friend_count + 0.001))
ggplot(data = subset(pf,
!is.na(prop_initiated) &
!is.na(year_joined.bucket) &
tenure >= 1),
aes(x = tenure, y = prop_initiated, color = year_joined.bucket)) +
geom_line(stat = "summary", fun.y = median)
pf$prop_initiated <- with(pf, friendships_initiated / (friend_count + 0.01))
ggplot(data = subset(pf,
!is.na(prop_initiated) &
!is.na(year_joined.bucket) &
tenure >= 1),
aes(x = tenure, y = prop_initiated, color = year_joined.bucket)) +
geom_line(stat = "summary", fun.y = median)
pf$prop_initiated <- with(pf, friendships_initiated / (friend_count + 0.0001))
ggplot(data = subset(pf,
!is.na(prop_initiated) &
!is.na(year_joined.bucket) &
tenure >= 1),
aes(x = tenure, y = prop_initiated, color = year_joined.bucket)) +
geom_line(stat = "summary", fun.y = median)
ggplot(data = subset(pf,
!is.na(prop_initiated) &
!is.na(year_joined.bucket) &
tenure >= 1),
aes(x = (3 * tenure) / 3, y = prop_initiated, color = year_joined.bucket)) +
geom_line(stat = "summary", fun.y = median)
ggplot(data = subset(pf,
!is.na(prop_initiated) &
!is.na(year_joined.bucket) &
tenure >= 1),
aes(x = (5 * tenure) / 5, y = prop_initiated, color = year_joined.bucket)) +
geom_line(stat = "summary", fun.y = median)
ggplot(data = subset(pf,
!is.na(prop_initiated) &
!is.na(year_joined.bucket) &
tenure >= 1),
aes(x = 3 * round(tenure / 3), y = prop_initiated, color = year_joined.bucket)) +
geom_line(stat = "summary", fun.y = median)
ggplot(data = subset(pf,
!is.na(prop_initiated) &
!is.na(year_joined.bucket) &
tenure >= 1),
aes(x = 5 * round(tenure / 5), y = prop_initiated, color = year_joined.bucket)) +
geom_line(stat = "summary", fun.y = median)
ggplot(data = subset(pf,
!is.na(prop_initiated) &
!is.na(year_joined.bucket) &
tenure >= 1),
aes(x = 10 * round(tenure / 10), y = prop_initiated, color = year_joined.bucket)) +
geom_line(stat = "summary", fun.y = median)
ggplot(data = subset(pf, tenure >= 1),
aes(x = 10 * round(tenure / 10), y = prop_initiated, color = year_joined.bucket)) +
geom_line(stat = "summary", fun.y = median, na.rm = TRUE)
ggplot(data = subset(pf,tenure >= 1),
aes(x = tenure, y = prop_initiated, color = year_joined.bucket)) +
geom_line(stat = "summary", fun.y = median, na.rm = TRUE)
ggplot(data = subset(pf,tenure >= 1),
aes(x = tenure, y = prop_initiated, color = year_joined.bucket)) +
geom_line(stat = "summary", fun.y = median, na.rm = TRUE)
ggplot(data = subset(pf,tenure >= 1, prop_initiated != 1),
aes(x = tenure, y = prop_initiated, color = year_joined.bucket)) +
geom_line(stat = "summary", fun.y = median, na.rm = TRUE)
ggplot(data = subset(pf,tenure >= 1,),
aes(x = tenure, y = prop_initiated, color = year_joined.bucket)) +
geom_line(stat = "summary", fun.y = median, na.rm = TRUE)
ggplot(data = subset(pf,tenure >= 1),
aes(x = tenure, y = prop_initiated, color = year_joined.bucket)) +
geom_line(stat = "summary", fun.y = median, na.rm = TRUE)
with(pf$prop_initiated, pf$year_joined.bucket, summmay)
tapply(pf$prop_initiated,pf$year_joined.bucket,mean)
?tapply
ggplot(data = diamonds, aes(x = cut, y = price/carat, color = color)) +
geom_point() +
facet_wrap(~clarity)
ggplot(data = diamonds, aes(x = cut, y = price/carat, color = color)) +
geom_point() +
scale_color_brewer(type = "div") +
facet_wrap(~clarity)
ggplot(data = diamonds, aes(x = cut, y = price/carat, color = color)) +
geom_point() +
scale_color_brewer(type = "div")
ggplot(data = diamonds) +
geom_point(aes(x = cut, y = price/carat, color = color)) +
scale_color_brewer(type = "div")
?geom_point
p <- ggplot(mtcars, aes(mpg, wt, shape = factor(cyl)))
p + geom_point(aes(colour = factor(cyl)), size = 4) +
geom_point(colour = "grey90", size = 1.5)
p + geom_point(colour = "black", size = 4.5) +
geom_point(colour = "pink", size = 4) +
geom_point(aes(shape = factor(cyl)))
p + geom_point(colour = "black", size = 4.5, show.legend = TRUE) +
geom_point(colour = "pink", size = 4, show.legend = TRUE) +
geom_point(aes(shape = factor(cyl)))
gplot(mtcars, aes(wt, mpg)) +
geom_point(shape = 21, colour = "black", fill = "white", size = 5, stroke = 5)
ggplot(data = diamonds, aes(x = cut, y = price/carat, color = color)) +
geom_jitter() +
scale_color_brewer(type = "div")
ggplot(data = diamonds, aes(x = cut, y = price/carat, color = color)) +
geom_point() +
geom_jitter() +
scale_color_brewer(type = "div")
ggplot(data = diamonds, aes(x = cut, y = price/carat, color = color)) +
geom_point() +
geom_jitter() +
scale_color_brewer(type = "div") +
facet_wrap(~clarity)
?geom_jitter
setwd("D:/DAND/Learning R")
